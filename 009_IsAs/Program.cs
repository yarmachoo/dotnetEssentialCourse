
ClassB b = new ClassB();
ClassA a = null;
//---------------------------------------is-------------------------
//Оператор is - проверяет совсместимость объекта с заданным типом.
//Если предоставленный обхект может быть приведен к предоставленному типу не вызывая исключеие,
// выражение is принимает значение true

//Например, в следующем примере определяется. является ли объект экземпляром типа А или типа, производного от А

if (b is ClassA)
{
    a = (ClassA)b;
}
else
{
    a = null;
}

// ------------------------------------------as-----------------------

//Оператор as ипользуется для преобразования между совместимыми ссылочными типами.
//Оператор as подобен оператору пприведения. Однако, если преобразование невозможно,
// as возвращает значение null, а не вызывает исключение.

//В общем виде логика работы оператора as представляет собой механизм использования операора is
//(25 строка), только в сокращенном виде.

a = b as ClassA;

class ClassA { /* .. */ }
class  ClassB: ClassA { /* .. */ }
